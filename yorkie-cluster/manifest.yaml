apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:/Service:mongodb/mongodb
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: kubernetes
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: yorkie
  name: mongodb
  namespace: mongodb
spec:
  ports:
    - appProtocol: tcp
      name: mongodb
      port: 27017
      targetPort: 27017
  selector:
    app.kubernetes.io/instance: mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:/Service:yorkie/yorkie
    prometheus.io/path: /metrics
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: yorkie
    app.kubernetes.io/managed-by: istio
    app.kubernetes.io/name: yorkie
    app.kubernetes.io/part-of: yorkie
  name: yorkie
  namespace: yorkie
spec:
  ports:
    - appProtocol: grpc-web
      name: yorkie-rpc
      port: 8080
      targetPort: 8080
    - appProtocol: http
      name: yorkie-profiling
      port: 8081
      targetPort: 8081
  selector:
    app.kubernetes.io/instance: yorkie
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:apps/Deployment:yorkie/yorkie
  labels:
    app: yorkie
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: yorkie
    app.kubernetes.io/managed-by: istio
    app.kubernetes.io/name: yorkie
    app.kubernetes.io/part-of: yorkie
    app.kubernetes.io/version: 0.6.23
    version: 0.6.23
  name: yorkie
  namespace: yorkie
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: yorkie
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
      labels:
        app: yorkie
        app.kubernetes.io/instance: yorkie
        app.kubernetes.io/version: 0.6.23
        version: 0.6.23
    spec:
      containers:
        - args:
            - server
            - --mongo-connection-uri
            - mongodb://mongodb.mongodb.svc.cluster.local:27017/yorkie-meta
            - --mongo-yorkie-database
            - yorkie-meta
            - --pprof-enabled
            - --rpc-port
            - "8080"
            - --profiling-port
            - "8081"
            - --backend-gateway-addr
            - yorkie-gateway.yorkie.svc.cluster.local
            - --backend-use-default-project
            - "false"
            - --log-level
            - info
          image: yorkieteam/yorkie:0.6.23
          imagePullPolicy: IfNotPresent
          livenessProbe:
            grpc:
              port: 8080
            initialDelaySeconds: 10
          name: yorkie
          ports:
            - containerPort: 8080
            - containerPort: 8081
          resources: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:apps/StatefulSet:mongodb/mongodb
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: kubernetes
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: yorkie
  name: mongodb
  namespace: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mongodb
  serviceName: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: mongodb
    spec:
      containers:
        - image: docker.io/mongo:6.0
          name: mongodb
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-storage
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
    - metadata:
        name: mongodb-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.k8s.io/Ingress:yorkie/yorkie
  name: yorkie
  namespace: yorkie
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: yorkie-gateway
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.istio.io/DestinationRule:yorkie/yorkie
  name: yorkie
  namespace: yorkie
spec:
  host: yorkie
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpHeaderName: x-shard-key
        maglev:
          tableSize: 65537
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.istio.io/EnvoyFilter:yorkie/ingress-stream-idle-timeout-filter
  name: ingress-stream-idle-timeout-filter
  namespace: yorkie
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
      patch:
        operation: MERGE
        value:
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stream_idle_timeout: 60s
  workloadSelector:
    labels:
      istio: yorkie-gateway
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.istio.io/EnvoyFilter:yorkie/ingress-shard-key-header-filter
  name: ingress-shard-key-header-filter
  namespace: yorkie
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            default_source_code:
              inline_string: |-
                function envoy_on_request(request_handle) local x_shard_key_header = request_handle:headers():get("x-shard-key") local x_api_key_header = request_handle:headers():get("x-api-key")
                if x_shard_key_header == nil then if x_api_key_header == nil then request_handle:headers():add("x-shard-key", "default") else request_handle:headers():add("x-shard-key", x_api_key_header) end end end
  workloadSelector:
    labels:
      istio: yorkie-gateway
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.istio.io/Gateway:yorkie/yorkie-gateway
  name: yorkie-gateway
  namespace: yorkie
spec:
  selector:
    istio: yorkie-gateway
  servers:
    - hosts:
        - '*'
      port:
        name: yorkie-rpc-http
        number: 80
        protocol: grpc-web
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: yorkie-app:networking.istio.io/VirtualService:yorkie/yorkie
  name: yorkie
  namespace: yorkie
spec:
  gateways:
    - yorkie-gateway
  hosts:
    - '*'
  http:
    - corsPolicy:
        allowCredentials: true
        allowHeaders:
          - grpc-timeout
          - content-type
          - keep-alive
          - user-agent
          - cache-control
          - content-transfer-encoding
          - custom-header-1
          - x-accept-content-transfer-encoding
          - x-accept-response-streaming
          - x-user-agent
          - x-yorkie-user-agent
          - x-grpc-web
          - authorization
          - x-api-key
          - x-shard-key
          - connect-protocol-version
          - connect-timeout-ms
        allowMethods:
          - POST
          - GET
          - OPTIONS
          - PUT
          - DELETE
        allowOrigin:
          - '*'
        exposeHeaders:
          - custom-header-1
          - grpc-status
          - grpc-message
          - grpc-status-details-bin
        maxAge: 1728s
      match:
        - uri:
            prefix: /yorkie.v1
        - uri:
            prefix: /auth
      name: yorkie-rpc-service
      route:
        - destination:
            host: yorkie
            port:
              number: 8080
